0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.12.1
3 info using node@v0.12.7
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: '/Users/Charlie/Coding/cutoff-catcher',
8 silly cache add   type: 'directory' }
9 verbose addLocalDirectory /Users/Charlie/.npm/cutoff-catcher/1.0.4/package.tgz not in flight; packing
10 verbose tar pack [ '/Users/Charlie/.npm/cutoff-catcher/1.0.4/package.tgz',
10 verbose tar pack   '/Users/Charlie/Coding/cutoff-catcher' ]
11 verbose tarball /Users/Charlie/.npm/cutoff-catcher/1.0.4/package.tgz
12 verbose folder /Users/Charlie/Coding/cutoff-catcher
13 info prepublish cutoff-catcher@1.0.4
14 verbose addLocalTarball adding from inside cache /Users/Charlie/.npm/cutoff-catcher/1.0.4/package.tgz
15 silly cache afterAdd cutoff-catcher@1.0.4
16 verbose afterAdd /Users/Charlie/.npm/cutoff-catcher/1.0.4/package/package.json not in flight; writing
17 verbose afterAdd /Users/Charlie/.npm/cutoff-catcher/1.0.4/package/package.json written
18 silly publish { name: 'cutoff-catcher',
18 silly publish   version: '1.0.4',
18 silly publish   description: 'A binary-search-flavored method to finding a cutoff',
18 silly publish   main: 'index.js',
18 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/cd17822/cutoff-catcher.git' },
18 silly publish   keywords:
18 silly publish    [ 'cutoff',
18 silly publish      'catcher',
18 silly publish      'cutoff-catcher',
18 silly publish      'search',
18 silly publish      'loop',
18 silly publish      'find',
18 silly publish      'binary',
18 silly publish      'b-search' ],
18 silly publish   author:
18 silly publish    { name: 'Charlie DiGiovanna',
18 silly publish      email: 'cd17822@gmail.com',
18 silly publish      url: 'http://www.charlied.me' },
18 silly publish   license: 'ISC',
18 silly publish   bugs: { url: 'https://github.com/cd17822/cutoff-catcher/issues' },
18 silly publish   homepage: 'https://github.com/cd17822/cutoff-catcher#readme',
18 silly publish   readme: '\n#### Meta\n\n- Author: Charlie DiGiovanna\n- Email: cd17822@gmail.com\n- Twitter, Github, npm: [@cd17822](https://twitter.com/cd17822)\n- Site: http://www.charlied.me\n- Version: 1.0.5\n\n\n#### Installation\n\nTo install `cutoff-catcher` using [npm](https://www.npmjs.org/), run:\n\n```\n$ npm install cutoff-catcher\n```\n\n#### How it works\n\nBy putting in an initial step, `cutoff-catcher` will iterate over the integers by such step until the a condition is satisfied (the input function returns true). Then a binary search beginning at the midpoint of the iterator\'s position and the previous iterator position will begin until the cutoff between where the condition is and is not satisfied is found. Return format is (error, cutoffPosition).\n\n\n#### Usage\n\nWith `cutoff-catcher` you can do more efficient iterations over a large range of numbers to search for where a certain quality changes. Specify an initial step size and a function to look for a specific quality. Will return an error if it could not find the cutoff in 1,000,000 steps, or the first integer where the test is successful. The following are 3 examples where one could apply the module (1 javascript and 2 coffeescript because coffeescript is life).\n\nFind the smallest value for which the sum from i=1 to n of (2i)^3 <= (20n)^3.\n\n```javascript\nvar catcher = require(\'cutoff-catcher\');\n\ntest = function(x){\n  var sum = 0;\n\n  for (var i=0; i<x; i++) {\n    sum += Math.pow(2*i, 3);\n  }\n\n  return sum > Math.pow(20*x, 3);\n}\n\ncatcher(1000, test, function(err, cutoff){\n  if(err){\n    console.log(err);\n  }else{\n    console.log(cutoff);\n  }\n});\n```\n\nDo a more efficient find for alpha-ordered lists (better for large lists).\n\n```coffeescript\ncatcher = require \'cutoff-catcher\'\n\ndict = ["apple", "grapefruit", "orange", "tomato", "zuchini", "banana", "kiwi", "grape"].sort()\n\ncatcher 4, (x) -> dict[x] >= "grape", (err, cutoff) ->\n  if err then console.log err\n  else console.log dict[cutoff]\n```\n\nFind a field attribute cutoff in a list of objects.\n\n```coffeescript\ncatcher = require \'cutoff-catcher\'\n\nben = name: \'ben\', present: yes\nluke = name: \'luke\', present: yes\njoe = name: \'joe\', present: yes\nnoah = name: \'noah\', present: no\ngary = name: \'gary\', present: no\n\npeople = [ben, luke, joe, noah, gary]\n\ntest = (x) -> try not people[x].present\n\ncatcher 2, test, (err, cutoff) ->\n  if err then console.log err\n  else console.log people[cutoff].name\n```\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '0cf7c7d58b5bca93aad4741a1dfc8b9af130b2f6',
18 silly publish   _id: 'cutoff-catcher@1.0.4',
18 silly publish   _shasum: '8e741941ba7e498ab47fd5dc19fe6fa0f507b3d6',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name cutoff-catcher
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/cutoff-catcher
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/Charlie/.npm/cutoff-catcher/1.0.4/package.tgz
26 verbose request uri https://registry.npmjs.org/cutoff-catcher
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 20:44:12
29 verbose request using bearer token for auth
30 verbose request id 5fc5354897412f51
31 http request PUT https://registry.npmjs.org/cutoff-catcher
32 http 403 https://registry.npmjs.org/cutoff-catcher
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=60',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Wed, 16 Sep 2015 00:44:13 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-atl6227-ATL',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1442364252.912335,VS0,VE692' }
34 verbose request invalidating /Users/Charlie/.npm/registry.npmjs.org/cutoff-catcher on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 1.0.4." : cutoff-catcher
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
36 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
36 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:197:22)
36 verbose stack     at Request.emit (events.js:110:17)
36 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1050:14)
36 verbose stack     at Request.emit (events.js:129:20)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:996:12)
36 verbose stack     at IncomingMessage.emit (events.js:129:20)
36 verbose stack     at _stream_readable.js:908:16
36 verbose stack     at process._tickCallback (node.js:355:11)
37 verbose statusCode 403
38 verbose pkgid cutoff-catcher
39 verbose cwd /Users/Charlie/Coding/cutoff-catcher
40 error Darwin 14.5.0
41 error argv "node" "/usr/local/bin/npm" "publish"
42 error node v0.12.7
43 error npm  v2.12.1
44 error code E403
45 error "You cannot publish over the previously published version 1.0.4." : cutoff-catcher
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
